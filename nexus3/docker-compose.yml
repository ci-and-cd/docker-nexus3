
# see: https://github.com/clearent/nexus
# see: https://github.com/sonatype/docker-nexus3/blob/master/Dockerfile

# see: http://www.sonatype.org/nexus/2015/09/22/docker-and-nexus-3-ready-set-action/
# see: http://codeheaven.io/using-nexus-3-as-your-repository-part-3-docker-images/

# Docker usage without SSL:
# Must login
# see: [add anonymous read access support for docker repositories](https://issues.sonatype.org/browse/NEXUS-10813)
#
# docker login -u deployment -p deployment registry.docker.local
# docker login -u deployment -p deployment registry.docker.local:5000
# docker login -u deployment -p deployment registry.docker.local:5002
# docker login -u deployment -p deployment registry.docker.local:5003
# cat ~/.docker/config.json
# docker search registry.docker.local/alpine
# docker pull registry.docker.local/alpine
# docker tag nginx:1.11.5-alpine registry.docker.local:5000/nginx:1.11.5-alpine
# docker push registry.docker.local:5000/nginx:1.11.5-alpine

# With SSL: TODO
# see: https://books.sonatype.com/nexus-book/3.0/reference/security.html#ssl-inbound
# see: http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html
# keytool -keystore keystore -alias jetty -genkeypair -keyalg RSA \
# -storepass changeit -keypass changeit -keysize 2048 -validity 5000 \
# -dname "CN=*.${NEXUS_DOMAIN}, OU=Example, O=Sonatype, L=Unspecified, ST=Unspecified, C=US" \
# -ext "SAN=DNS:${NEXUS_DOMAIN},IP:${NEXUS_IP_ADDRESS}" -ext "BC=ca:true" \
#
# keytool -keystore keystore -alias jetty -genkey -keyalg RSA -sigalg SHA256withRSA -ext 'SAN=dns:jetty.eclipse.org,dns:*.jetty.org'

# npm usage:
# npm config set registry http://nexus.local:28081/nexus/repository/npm-public/
# npm config set cache ${HOME}/.npm/.cache/npm
# npm config set disturl http://nexus.local:28081/nexus/repository/npm-dist/
# npm config set sass_binary_site http://nexus.local:28081/nexus/repository/npm-sass/
# cat ~/.npmrc
# or edit '.npmrc': registry = http://localhost:8081/nexus/repository/npm-public/
# npm login --registry=http://nexus.local:28081/nexus/repository/npm-hosted/
# npm --loglevel info install -g bower
# npm publish --registry http://nexus.local:28081/nexus/repository/npm-hosted/
# or "publishConfig" : {"registry" : "http://nexus.local:28081/nexus/repository/npm-hosted/"},
# npm deprecate --registry http://nexus.local:28081/nexus/repository/npm-hosted/ testproject1@0.0.1 "This package is deprecated"

# bower usage:
# npm install -g bower && npm install -g bower-nexus3-resolver
# .bowerrc
# {
# "registry" : {
#   "search" : [ "http://nexus.local:28081/nexus/repository/bower-public" ],
#   "register" : "http://nexus.local:28081/nexus/repository/bower-hosted"
# },
# "resolvers" : [ "bower-nexus3-resolver" ],
# "nexus" : {"username" : "deployment","password" : "deployment"}
# }
# package.json "devDependencies" : {"bower-nexus3-resolver" : "*"}
# bower install jquery
# bower register example-package git://gitserver/project.git
# bower install example-package

version: '2.1'
services:
  nexus3:
    build:
      context: .
      dockerfile: Dockerfile
      args:
      - build_fileserver=https://github.com
    image: ${DOCKER_REGISTRY:-home1oss}/nexus3:3.8.0
    restart: always
    command: ["bin/nexus", "run"]
    container_name: ${NEXUS_HOSTNAME:-nexus3.local}
    hostname: ${NEXUS_HOSTNAME:-nexus3.local}
    ports:
    - "${NEXUS_EXTERNAL_PORT:-28081}:${NEXUS_PORT:-8081}"
    #- "80:5000/tcp"
    #- "5002:5002/tcp"
    #- "5003:5003/tcp"
    #- "5001:5001/tcp"
    volumes:
    - nexus3-volume:/nexus-data
    #- ./keystore.jks:/nexus-data/keystore.jks
    environment:
    - INTERNAL_NEXUS=${INTERNAL_NEXUS}/content/groups/public/
    #- JKS_PASSWORD=changeit
    - NEXUS_CONTEXT=${NEXUS_CONTEXT:-nexus}
    - NEXUS_DEPLOYMENT_PASSWORD=${NEXUS_DEPLOYMENT_PASSWORD:-deployment}
    - NEXUS_HOSTNAME=${NEXUS_HOSTNAME:-nexus3.local}

volumes:
  nexus3-volume: {}

networks:
  default:
    external:
      name: oss-network
